{
     "info": {
          "_postman_id": "cloud-code-editor-api-collection",
          "name": "Cloud Code Editor API Collection",
          "description": "Comprehensive API collection for testing Cloud Code Editor microservices\n\nUser Credentials:\n- Username: kunalpro379\n- Email: kunaldp379@gmail.com\n\nServices:\n- API Gateway (Port 8233)\n- Authentication Service (Port 8009)\n- Session Manager Service (Port 8082)",
          "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
     },
     "item": [
          {
               "name": "üîê Authentication Service",
               "item": [
                    {
                         "name": "Register User",
                         "request": {
                              "method": "POST",
                              "header": [
                                   {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                   }
                              ],
                              "body": {
                                   "mode": "raw",
                                   "raw": "{\n  \"username\": \"kunalpro379\",\n  \"email\": \"kunaldp379@gmail.com\",\n  \"password\": \"TestPassword123!\",\n  \"firstName\": \"Kunal\",\n  \"lastName\": \"Pro\",\n  \"profileImageUrl\": \"https://example.com/avatar.jpg\"\n}"
                              },
                              "url": {
                                   "raw": "{{base_url}}/api/auth/register",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "auth",
                                        "register"
                                   ]
                              },
                              "description": "Register a new user account"
                         },
                         "response": []
                    },
                    {
                         "name": "Login User",
                         "request": {
                              "method": "POST",
                              "header": [
                                   {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                   }
                              ],
                              "body": {
                                   "mode": "raw",
                                   "raw": "{\n  \"username\": \"kunalpro379\",\n  \"password\": \"TestPassword123!\"\n}"
                              },
                              "url": {
                                   "raw": "{{base_url}}/api/auth/authenticate",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "auth",
                                        "authenticate"
                                   ]
                              },
                              "description": "Authenticate user and get JWT tokens"
                         },
                         "event": [
                              {
                                   "listen": "test",
                                   "script": {
                                        "exec": [
                                             "if (pm.response.code === 200) {",
                                             "    const response = pm.response.json();",
                                             "    if (response.accessToken) {",
                                             "        pm.environment.set('access_token', response.accessToken);",
                                             "        pm.environment.set('refresh_token', response.refreshToken);",
                                             "        console.log('Tokens saved to environment');",
                                             "    }",
                                             "}"
                                        ],
                                        "type": "text/javascript"
                                   }
                              }
                         ],
                         "response": []
                    },
                    {
                         "name": "Refresh Token",
                         "request": {
                              "method": "POST",
                              "header": [
                                   {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                   }
                              ],
                              "body": {
                                   "mode": "raw",
                                   "raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
                              },
                              "url": {
                                   "raw": "{{base_url}}/api/auth/refresh",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "auth",
                                        "refresh"
                                   ]
                              },
                              "description": "Refresh access token using refresh token"
                         },
                         "response": []
                    },
                    {
                         "name": "Validate Token",
                         "request": {
                              "method": "GET",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/auth/validate",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "auth",
                                        "validate"
                                   ]
                              },
                              "description": "Validate JWT access token"
                         },
                         "response": []
                    },
                    {
                         "name": "Get User Info",
                         "request": {
                              "method": "GET",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/auth/user-info",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "auth",
                                        "user-info"
                                   ]
                              },
                              "description": "Get current user information"
                         },
                         "response": []
                    },
                    {
                         "name": "Logout",
                         "request": {
                              "method": "POST",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/auth/logout",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "auth",
                                        "logout"
                                   ]
                              },
                              "description": "Logout current user session"
                         },
                         "response": []
                    },
                    {
                         "name": "Logout All Sessions",
                         "request": {
                              "method": "POST",
                              "header": [
                                   {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                   }
                              ],
                              "body": {
                                   "mode": "raw",
                                   "raw": "{\n  \"username\": \"kunalpro379\"\n}"
                              },
                              "url": {
                                   "raw": "{{base_url}}/api/auth/logout-all",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "auth",
                                        "logout-all"
                                   ]
                              },
                              "description": "Logout all sessions for a user"
                         },
                         "response": []
                    }
               ],
               "description": "Authentication service endpoints for user registration, login, and token management"
          },
          {
               "name": "üìã Session Manager Service",
               "item": [
                    {
                         "name": "Create Session",
                         "request": {
                              "method": "POST",
                              "header": [
                                   {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                   },
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "body": {
                                   "mode": "raw",
                                   "raw": "{\n  \"name\": \"Test Session\",\n  \"description\": \"A test session for API testing\",\n  \"language\": \"java\",\n  \"framework\": \"spring-boot\",\n  \"isDynamic\": false\n}"
                              },
                              "url": {
                                   "raw": "{{base_url}}/api/session/sessions",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "session",
                                        "sessions"
                                   ]
                              },
                              "description": "Create a new coding session"
                         },
                         "event": [
                              {
                                   "listen": "test",
                                   "script": {
                                        "exec": [
                                             "if (pm.response.code === 201) {",
                                             "    const response = pm.response.json();",
                                             "    if (response.sessionId) {",
                                             "        pm.environment.set('session_id', response.sessionId);",
                                             "        console.log('Session ID saved:', response.sessionId);",
                                             "    }",
                                             "}"
                                        ],
                                        "type": "text/javascript"
                                   }
                              }
                         ],
                         "response": []
                    },
                    {
                         "name": "Get Session",
                         "request": {
                              "method": "GET",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/session/sessions/{{session_id}}",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "session",
                                        "sessions",
                                        "{{session_id}}"
                                   ]
                              },
                              "description": "Get session details by ID"
                         },
                         "response": []
                    },
                    {
                         "name": "Update Session",
                         "request": {
                              "method": "PUT",
                              "header": [
                                   {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                   },
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "body": {
                                   "mode": "raw",
                                   "raw": "{\n  \"name\": \"Updated Test Session\",\n  \"description\": \"Updated description for the test session\",\n  \"language\": \"python\",\n  \"framework\": \"django\",\n  \"isDynamic\": true\n}"
                              },
                              "url": {
                                   "raw": "{{base_url}}/api/session/sessions/{{session_id}}",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "session",
                                        "sessions",
                                        "{{session_id}}"
                                   ]
                              },
                              "description": "Update session details"
                         },
                         "response": []
                    },
                    {
                         "name": "Get User Sessions",
                         "request": {
                              "method": "GET",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/session/sessions/my-sessions",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "session",
                                        "sessions",
                                        "my-sessions"
                                   ]
                              },
                              "description": "Get all sessions for current user"
                         },
                         "response": []
                    },
                    {
                         "name": "Get Owned Sessions",
                         "request": {
                              "method": "GET",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/session/sessions/owned",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "session",
                                        "sessions",
                                        "owned"
                                   ]
                              },
                              "description": "Get sessions owned by current user"
                         },
                         "response": []
                    },
                    {
                         "name": "Get Active Deployments",
                         "request": {
                              "method": "GET",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/session/sessions/active-deployments",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "session",
                                        "sessions",
                                        "active-deployments"
                                   ]
                              },
                              "description": "Get all active deployments"
                         },
                         "response": []
                    },
                    {
                         "name": "Add Participant",
                         "request": {
                              "method": "POST",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/session/sessions/{{session_id}}/participants?email=test@example.com&role=EDITOR",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "session",
                                        "sessions",
                                        "{{session_id}}",
                                        "participants"
                                   ],
                                   "query": [
                                        {
                                             "key": "email",
                                             "value": "test@example.com"
                                        },
                                        {
                                             "key": "role",
                                             "value": "EDITOR"
                                        }
                                   ]
                              },
                              "description": "Add a participant to the session"
                         },
                         "response": []
                    },
                    {
                         "name": "Get Session Participants",
                         "request": {
                              "method": "GET",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/session/sessions/{{session_id}}/participants",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "session",
                                        "sessions",
                                        "{{session_id}}",
                                        "participants"
                                   ]
                              },
                              "description": "Get all participants in the session"
                         },
                         "response": []
                    },
                    {
                         "name": "Deploy Session",
                         "request": {
                              "method": "POST",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/session/sessions/{{session_id}}/deploy",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "session",
                                        "sessions",
                                        "{{session_id}}",
                                        "deploy"
                                   ]
                              },
                              "description": "Deploy the session to a runtime environment"
                         },
                         "response": []
                    },
                    {
                         "name": "Join Deployed Session",
                         "request": {
                              "method": "POST",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/session/sessions/{{session_id}}/join",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "session",
                                        "sessions",
                                        "{{session_id}}",
                                        "join"
                                   ]
                              },
                              "description": "Join a deployed session"
                         },
                         "response": []
                    },
                    {
                         "name": "Get Session Status",
                         "request": {
                              "method": "GET",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/session/sessions/{{session_id}}/status",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "session",
                                        "sessions",
                                        "{{session_id}}",
                                        "status"
                                   ]
                              },
                              "description": "Get current status of the session"
                         },
                         "response": []
                    },
                    {
                         "name": "Stop Session",
                         "request": {
                              "method": "POST",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/session/sessions/{{session_id}}/stop",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "session",
                                        "sessions",
                                        "{{session_id}}",
                                        "stop"
                                   ]
                              },
                              "description": "Stop the deployed session"
                         },
                         "response": []
                    },
                    {
                         "name": "Restart Session",
                         "request": {
                              "method": "POST",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/session/sessions/{{session_id}}/restart",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "session",
                                        "sessions",
                                        "{{session_id}}",
                                        "restart"
                                   ]
                              },
                              "description": "Restart the session"
                         },
                         "response": []
                    },
                    {
                         "name": "Archive Session",
                         "request": {
                              "method": "POST",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/session/sessions/{{session_id}}/archive",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "session",
                                        "sessions",
                                        "{{session_id}}",
                                        "archive"
                                   ]
                              },
                              "description": "Archive the session"
                         },
                         "response": []
                    },
                    {
                         "name": "Delete Session",
                         "request": {
                              "method": "DELETE",
                              "header": [
                                   {
                                        "key": "Authorization",
                                        "value": "Bearer {{access_token}}"
                                   }
                              ],
                              "url": {
                                   "raw": "{{base_url}}/api/session/sessions/{{session_id}}",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "api",
                                        "session",
                                        "sessions",
                                        "{{session_id}}"
                                   ]
                              },
                              "description": "Delete the session permanently"
                         },
                         "response": []
                    }
               ],
               "description": "Session management endpoints for creating, managing, and deploying coding sessions"
          },
          {
               "name": "üåê API Gateway",
               "item": [
                    {
                         "name": "Gateway Health Check",
                         "request": {
                              "method": "GET",
                              "header": [],
                              "url": {
                                   "raw": "{{base_url}}/actuator/health",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "actuator",
                                        "health"
                                   ]
                              },
                              "description": "Check API Gateway health status"
                         },
                         "response": []
                    },
                    {
                         "name": "Gateway Routes",
                         "request": {
                              "method": "GET",
                              "header": [],
                              "url": {
                                   "raw": "{{base_url}}/actuator/gateway/routes",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "actuator",
                                        "gateway",
                                        "routes"
                                   ]
                              },
                              "description": "View configured gateway routes"
                         },
                         "response": []
                    },
                    {
                         "name": "Auth Service Fallback",
                         "request": {
                              "method": "GET",
                              "header": [],
                              "url": {
                                   "raw": "{{base_url}}/fallback/auth",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "fallback",
                                        "auth"
                                   ]
                              },
                              "description": "Test authentication service fallback"
                         },
                         "response": []
                    },
                    {
                         "name": "Session Service Fallback",
                         "request": {
                              "method": "GET",
                              "header": [],
                              "url": {
                                   "raw": "{{base_url}}/fallback/session",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "fallback",
                                        "session"
                                   ]
                              },
                              "description": "Test session service fallback"
                         },
                         "response": []
                    },
                    {
                         "name": "General Fallback",
                         "request": {
                              "method": "GET",
                              "header": [],
                              "url": {
                                   "raw": "{{base_url}}/fallback/general",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "fallback",
                                        "general"
                                   ]
                              },
                              "description": "Test general service fallback"
                         },
                         "response": []
                    }
               ],
               "description": "API Gateway endpoints for health checks and fallback responses"
          },
          {
               "name": "üß™ Test Scenarios",
               "item": [
                    {
                         "name": "Complete User Flow",
                         "request": {
                              "method": "GET",
                              "header": [],
                              "url": {
                                   "raw": "{{base_url}}/actuator/health",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "actuator",
                                        "health"
                                   ]
                              },
                              "description": "Test the complete user flow:\n1. Register user\n2. Login and get tokens\n3. Create session\n4. Add participants\n5. Deploy session\n6. Join session\n7. Get session status\n8. Stop session\n9. Archive session\n10. Delete session\n11. Logout"
                         },
                         "response": []
                    },
                    {
                         "name": "Rate Limiting Test",
                         "request": {
                              "method": "GET",
                              "header": [],
                              "url": {
                                   "raw": "{{base_url}}/actuator/health",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "actuator",
                                        "health"
                                   ]
                              },
                              "description": "Test rate limiting by making multiple rapid requests"
                         },
                         "response": []
                    },
                    {
                         "name": "Authentication Flow Test",
                         "request": {
                              "method": "GET",
                              "header": [],
                              "url": {
                                   "raw": "{{base_url}}/actuator/health",
                                   "host": [
                                        "{{base_url}}"
                                   ],
                                   "path": [
                                        "actuator",
                                        "health"
                                   ]
                              },
                              "description": "Test authentication flow:\n1. Try accessing protected endpoint without token\n2. Login and get token\n3. Access protected endpoint with token\n4. Try with invalid token\n5. Refresh token\n6. Access with new token"
                         },
                         "response": []
                    }
               ],
               "description": "Predefined test scenarios for comprehensive API testing"
          }
     ],
     "event": [
          {
               "listen": "prerequest",
               "script": {
                    "type": "text/javascript",
                    "exec": [
                         "// Set default headers for all requests",
                         "pm.request.headers.add({",
                         "    key: 'Accept',",
                         "    value: 'application/json'",
                         "});",
                         "",
                         "// Log request details",
                         "console.log('Request:', pm.request.method, pm.request.url);"
                    ]
               }
          },
          {
               "listen": "test",
               "script": {
                    "type": "text/javascript",
                    "exec": [
                         "// Common test assertions",
                         "pm.test('Status code is valid', function () {",
                         "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204, 400, 401, 403, 404, 500, 503]);",
                         "});",
                         "",
                         "pm.test('Response time is acceptable', function () {",
                         "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                         "});",
                         "",
                         "pm.test('Response has valid JSON', function () {",
                         "    if (pm.response.code !== 204) {",
                         "        pm.response.to.have.jsonBody();",
                         "    }",
                         "});",
                         "",
                         "// Log response details",
                         "console.log('Response Status:', pm.response.status);",
                         "console.log('Response Time:', pm.response.responseTime + 'ms');",
                         "",
                         "if (pm.response.code === 200 || pm.response.code === 201) {",
                         "    console.log('‚úÖ Request successful');",
                         "} else {",
                         "    console.log('‚ùå Request failed');",
                         "}"
                    ]
               }
          }
     ],
     "variable": [
          {
               "key": "base_url",
               "value": "http://localhost:8233",
               "type": "string",
               "description": "API Gateway base URL"
          },
          {
               "key": "auth_url",
               "value": "http://localhost:8009",
               "type": "string",
               "description": "Authentication service direct URL"
          },
          {
               "key": "session_url",
               "value": "http://localhost:8082",
               "type": "string",
               "description": "Session manager service direct URL"
          },
          {
               "key": "access_token",
               "value": "",
               "type": "string",
               "description": "JWT access token (auto-populated after login)"
          },
          {
               "key": "refresh_token",
               "value": "",
               "type": "string",
               "description": "JWT refresh token (auto-populated after login)"
          },
          {
               "key": "session_id",
               "value": "",
               "type": "string",
               "description": "Session ID (auto-populated after session creation)"
          },
          {
               "key": "username",
               "value": "kunalpro379",
               "type": "string",
               "description": "Test username"
          },
          {
               "key": "email",
               "value": "kunaldp379@gmail.com",
               "type": "string",
               "description": "Test email"
          },
          {
               "key": "password",
               "value": "TestPassword123!",
               "type": "string",
               "description": "Test password"
          }
     ]
}